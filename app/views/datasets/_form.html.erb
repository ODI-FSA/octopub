<%= bootstrap_form_tag url: url, method: method, data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } do |f| %>
  <%= f.text_field "dataset[name]", label: "Dataset name", value: @dataset.name, disabled: !@dataset.id.nil? %>
  <% if @dataset.id.nil? %>
    <%= f.select "dataset[owner]", organization_select_options, { label: "Owner" }, { class: "selectpicker form-control show-tick" } %>
  <% end %>
  <%= f.text_area "dataset[description]", label: "Dataset description", value: @dataset.description  %>
  <%= f.text_field "dataset[publisher_name]", label: "Publisher name", value: @dataset.publisher_name %>
  <%= f.url_field "dataset[publisher_url]", label: "Publisher URL", value: @dataset.publisher_url %>
  <%= f.select "dataset[license]", @licenses, label: "License", selected: @dataset.license %>
  <%= f.select "dataset[frequency]", [
                                        "One-off",
                                        "Annual",
                                        "Every working day",
                                        "Daily", "Monthly",
                                        "Every minute",
                                        "Every quarter",
                                        "Half yearly",
                                        "Weekly"
                                      ], label: "Publication frequency", selected: @dataset.frequency %>
  <div id="files">
    <h3>Data files</h3>
    <% if @dataset.dataset_files.count == 0 %>
      <%= render partial: "dataset_files/form", locals: { file: DatasetFile.new, f: f } %>
    <% else %>
      <% @dataset.dataset_files.each do |file| %>
        <div class="hidden">
          <%= render partial: "dataset_files/form", locals: { file: DatasetFile.new, f: f } %>
        </div>
        <%= render partial: "dataset_files/form", locals: { file: file, f: f } %>
      <% end %>
    <% end %>
  </div>
  <% if current_page?(action: 'new') %>
    <%=
      f.file_field "dataset[schema]",
      label: "Schema",
      help: 'Provide an optional <a href=\'http://csvlint.io/about#how_write_schema\'>schema</a> that all data files must adhere to'.html_safe
    %>
  <% end %>
  <p class="text-right" id="wut">
    <%= bs_button_to 'Add another file', '#', style: "success", id: "clone", icon: "glyphicon glyphicon-plus", class: "btn-xs" %>
  </p>
  <%= f.submit "Submit", class: "btn btn-primary btn-lg btn-block" %>
<% end %>

<script>
  $(document).ready(function() {
    var file = $('.file:first').clone();

    $('#clone').click(function(e) {
      e.preventDefault();
      clone = $(file).clone()
      clone.appendTo('#files');
      bgUpload(clone.find('.bg-upload'))
    });

    $('.bg-upload').each(function(i, elem) {
      bgUpload(elem)
    });

    function bgUpload(elem) {
      var fileInput = $(elem);
      var form         = $(fileInput.parents('form:first'));
      var submitButton = form.find('input[type="submit"]');
      var progressBar  = $("<div class='bar'></div>");
      var barContainer = $("<div class='progress'></div>").append(progressBar);
      fileInput.after(barContainer);
      fileInput.fileupload({
        fileInput:       fileInput,
        url:             form.data('url'),
        type:            'POST',
        autoUpload:       true,
        formData:         form.data('form-data'),
        paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
        dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
        replaceFileInput: false,
        progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          progressBar.css('width', progress + '%')
        },
        start: function (e) {
          submitButton.prop('disabled', true);

          progressBar.
            css('background', 'green').
            css('display', 'block').
            css('width', '0%').
            text("Loading...");
        },
        done: function(e, data) {
          submitButton.prop('disabled', false);
          progressBar.text("Uploading done");

          // extract key and generate URL from response
          var key   = $(data.jqXHR.responseXML).find("Key").text();
          var url   = '//' + form.data('host') + '/' + key;

          // create hidden field
          var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
          form.append(input);
        },
        fail: function(e, data) {
          submitButton.prop('disabled', false);

          progressBar.
            css("background", "red").
            text("Failed");
        }
      });
    }

  });
</script>
